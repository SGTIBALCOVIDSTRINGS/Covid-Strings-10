doc.type html
script
html
head
utf-8
viewport content=width=device-width, initial-scale=one>
title covid strings10 first round
filename=covid strings10 first round.js
first round=(highest overall seed ,second highest seed third highest seed first middle seed, second middle seed,  third lowest seed ,second lowest seed,lowest overall seed)
highest overall seed = 1 seed
second highest seed=2 seed
third highest seed=3 seed
firstmiddleseed=4seed
second middle seed = 5 seed
third lowest seed= 6 seed
second lowest seed = 7 seed
lowest overall seed = 8 seed
addEventListener(DOMContentLoaded, () => {
bracket =getelementbyid(bracket);
teams= [yellow,magenta,purple,red,blue,pink,indigo,teal]
create matchup(pink versus magenta)
matchup=document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML = <div>${team1}</<div>${team2}</div>;
return matchup;
create matchup(indigo versus purple)
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div>${team2}</div>;
return matchup;
create matchup(teal versus yellow)
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</Div><Div>${Team2}</Div>;
return matchup;
create matchup(blue versus red )
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div>${team2}</div>;
return matchup;
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div>${team2}</div>;
return matchup;
createround =covidstrings10 first round
round =document.createelement(div);
round.classlist.add(round);
for (let i = zero; i < teams.length; i += two) 
round.appendchild(creatematchup(teams[i], teams[i + one]));
return round
bracket.appendchild(createround(Teams));
matchup.innerHTML =<div class=team>${team1}</div><div class=team>${team2}</div>;
java util.scanner
java.util
questions[]questions={
question1
NEWQUESTION2
NEWQUESTION3
NEWQUESTION4
NEWQUESTION5
NEWQUESTION6
NEWQUESTION7
NEWQUESTION8
NEWQUESTION9
NEWQUESTION10
NEQUESTION11
NEWQUESTION12
NEQUESTION13
NEWQUESTION14
NEWQUESITON15
Collections.Shuffle(Arrays.Aslist(Questions)
Advancing Teams=Teams.Slice(Zero,/Two)
Let Result= DeclareWinner(Team1 Score, Team2 Score)
if Team Magenta  Score>=Fourty:
Console.Log(Magenta Magnetizers Win)
Else:
Console.Log(PINK COVID DISEASE FIGHTERS WIN)
IF TEAM PURPLE SCORE>=FOURTY:
CONSOLE.LOG(PURPLE BRAVE HEARTS WIN)
ELSE:
CONSOLE.LOG(INDIGO ISOS WIN)
IF TEAM YELLOW SCORE>=Fourty:
CONSOLE.LOG(YELLOW MOXIE WINS)
ELSE:
CONSOLE.LOG(TEAL TERMINATORS WIN)
IF TEAM RED SCORE >=FOURTY:
CONSOLE.LOG(RED PROTEIN SPIKERS WIN)
ELSE:
CONSOLE.LOG(BLUE CURVE CRUSHERS WIN)
return Filename

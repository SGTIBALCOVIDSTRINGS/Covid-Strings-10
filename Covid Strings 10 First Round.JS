doc.type html
script
html
head
utf-8
viewport content=width=device-width, initial-scale=one>
title covid strings10 first round
filename=covid strings10 first round.js
first round=(highest overall seed ,second highest seed third highest seed first middle seed, second middle seed,  third lowest seed ,second lowest seed,lowest overall seed)
highest overall seed = 1 seed
second highest seed=2 seed
third highest seed=3 seed
firstmiddleseed=4seed
second middle seed = 5 seed
third lowest seed= 6 seed
second lowest seed = 7 seed
lowest overall seed = 8 seed
addEventListener(domcontentloaded,) () => {
bracket =getelementbyid(bracket);
teams= [yellow,magenta,purple,red,blue,pink,indigo,teal]
create matchup(pink versus magenta)
matchup=document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML = <div>${team1}</<div>${team2}</div>;
return matchup;
create matchup(indigo versus purple)
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div>${team2}</div>;
return matchup;
create matchup(teal versus yellow)
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</Div><Div>${Team2}</Div>;
return matchup;
if (event.target.classlist.contains(team)) 
return matchup
else 
add matchup
create matchup(blue versus red )
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div>${team2}</div>;
return matchup;
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div>${team2}</div>;
return matchup;
createround =covidstrings10 first round
round =document.createelement(div);
round.classlist.add(round);
for (let i = zero; i < teams.length; i += two) 
round.appendchild(creatematchup(teams[i], teams[i + one]));
return round
bracket.appendchild(createround(teams));
matchup.innerHTML =<div class=team>${team1}</div><div class=team>${team2}</div>;
java util.scanner
java.util
questions[]questions={
question1
question2
question3
question4
question5
question6
question7
question8
question9
question10
question11
question12
question13
question14
question15
collections.shuffle(arrays.aslist(questions)
advancing teams=slice(current teams)
result=declarewinner(team1 score, team2 score)
if magenta  score>=forty:
console.log(magenta magnetizers win)
else:
console.log(pink covid disease fighters win)
if  purple score>=forty:
console.log(purple brave hearts win)
else:
console.log(indigo isos win)
if yellow score>=forty:
console.log(yellow moxie wins)
else:
console.log(teal terminators win)
if team red score >=forty:
console.log(red protein spikers win)
else:
console.log(blue curve crushers win)
return filename
